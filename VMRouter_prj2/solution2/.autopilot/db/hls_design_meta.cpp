#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("stubsInLayer_z_V_address0", 1, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("stubsInLayer_z_V_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("stubsInLayer_z_V_q0", 12, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("stubsInLayer_phi_V_address0", 1, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("stubsInLayer_phi_V_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("stubsInLayer_phi_V_q0", 14, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("stubsInLayer_r_V_address0", 1, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("stubsInLayer_r_V_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("stubsInLayer_r_V_q0", 7, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("stubsInLayer_pt_V_address0", 1, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("stubsInLayer_pt_V_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("stubsInLayer_pt_V_q0", 3, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("allStubs_z_V_address0", 1, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("allStubs_z_V_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("allStubs_z_V_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("allStubs_z_V_d0", 12, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("allStubs_phi_V_address0", 1, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("allStubs_phi_V_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("allStubs_phi_V_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("allStubs_phi_V_d0", 14, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("allStubs_r_V_address0", 1, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("allStubs_r_V_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("allStubs_r_V_we0", 1, hls_out, 6, "ap_memory", "mem_we", 1),
	Port_Property("allStubs_r_V_d0", 7, hls_out, 6, "ap_memory", "mem_din", 1),
	Port_Property("allStubs_pt_V_address0", 1, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("allStubs_pt_V_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("allStubs_pt_V_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("allStubs_pt_V_d0", 3, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z1_z_V_address0", 1, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z1_z_V_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z1_z_V_we0", 1, hls_out, 8, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z1_z_V_d0", 4, hls_out, 8, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z1_phi_V_address0", 1, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z1_phi_V_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z1_phi_V_we0", 1, hls_out, 9, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z1_phi_V_d0", 3, hls_out, 9, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z1_r_V_address0", 1, hls_out, 10, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z1_r_V_ce0", 1, hls_out, 10, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z1_r_V_we0", 1, hls_out, 10, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z1_r_V_d0", 2, hls_out, 10, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z1_pt_V_address0", 1, hls_out, 11, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z1_pt_V_ce0", 1, hls_out, 11, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z1_pt_V_we0", 1, hls_out, 11, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z1_pt_V_d0", 3, hls_out, 11, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z1_index_V_address0", 1, hls_out, 12, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z1_index_V_ce0", 1, hls_out, 12, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z1_index_V_we0", 1, hls_out, 12, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z1_index_V_d0", 6, hls_out, 12, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z2_z_V_address0", 1, hls_out, 13, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z2_z_V_ce0", 1, hls_out, 13, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z2_z_V_we0", 1, hls_out, 13, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z2_z_V_d0", 4, hls_out, 13, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z2_phi_V_address0", 1, hls_out, 14, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z2_phi_V_ce0", 1, hls_out, 14, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z2_phi_V_we0", 1, hls_out, 14, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z2_phi_V_d0", 3, hls_out, 14, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z2_r_V_address0", 1, hls_out, 15, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z2_r_V_ce0", 1, hls_out, 15, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z2_r_V_we0", 1, hls_out, 15, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z2_r_V_d0", 2, hls_out, 15, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z2_pt_V_address0", 1, hls_out, 16, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z2_pt_V_ce0", 1, hls_out, 16, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z2_pt_V_we0", 1, hls_out, 16, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z2_pt_V_d0", 3, hls_out, 16, "ap_memory", "mem_din", 1),
	Port_Property("vmStubsPH1Z2_index_V_address0", 1, hls_out, 17, "ap_memory", "mem_address", 1),
	Port_Property("vmStubsPH1Z2_index_V_ce0", 1, hls_out, 17, "ap_memory", "mem_ce", 1),
	Port_Property("vmStubsPH1Z2_index_V_we0", 1, hls_out, 17, "ap_memory", "mem_we", 1),
	Port_Property("vmStubsPH1Z2_index_V_d0", 6, hls_out, 17, "ap_memory", "mem_din", 1),
};
const char* HLS_Design_Meta::dut_name = "VMRouter";
