// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="VMRouter,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1158-1,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.390000,HLS_SYN_LAT=257,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=184,HLS_SYN_LUT=137}" *)

module VMRouter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stubsInLayer_z_V_address0,
        stubsInLayer_z_V_ce0,
        stubsInLayer_z_V_q0,
        stubsInLayer_phi_V_address0,
        stubsInLayer_phi_V_ce0,
        stubsInLayer_phi_V_q0,
        stubsInLayer_r_V_address0,
        stubsInLayer_r_V_ce0,
        stubsInLayer_r_V_q0,
        stubsInLayer_pt_V_address0,
        stubsInLayer_pt_V_ce0,
        stubsInLayer_pt_V_q0,
        stubsInLayer_real_address0,
        stubsInLayer_real_ce0,
        stubsInLayer_real_we0,
        stubsInLayer_real_d0,
        stubsInLayer_real_q0,
        stubsInLayer_real_address1,
        stubsInLayer_real_ce1,
        stubsInLayer_real_we1,
        stubsInLayer_real_d1,
        stubsInLayer_real_q1,
        allStubs_z_V_address0,
        allStubs_z_V_ce0,
        allStubs_z_V_we0,
        allStubs_z_V_d0,
        allStubs_phi_V_address0,
        allStubs_phi_V_ce0,
        allStubs_phi_V_we0,
        allStubs_phi_V_d0,
        allStubs_r_V_address0,
        allStubs_r_V_ce0,
        allStubs_r_V_we0,
        allStubs_r_V_d0,
        allStubs_pt_V_address0,
        allStubs_pt_V_ce0,
        allStubs_pt_V_we0,
        allStubs_pt_V_d0,
        allStubs_real_address0,
        allStubs_real_ce0,
        allStubs_real_we0,
        allStubs_real_d0,
        vmStubsPH1Z1_z_V_address0,
        vmStubsPH1Z1_z_V_ce0,
        vmStubsPH1Z1_z_V_we0,
        vmStubsPH1Z1_z_V_d0,
        vmStubsPH1Z1_phi_V_address0,
        vmStubsPH1Z1_phi_V_ce0,
        vmStubsPH1Z1_phi_V_we0,
        vmStubsPH1Z1_phi_V_d0,
        vmStubsPH1Z1_r_V_address0,
        vmStubsPH1Z1_r_V_ce0,
        vmStubsPH1Z1_r_V_we0,
        vmStubsPH1Z1_r_V_d0,
        vmStubsPH1Z1_pt_V_address0,
        vmStubsPH1Z1_pt_V_ce0,
        vmStubsPH1Z1_pt_V_we0,
        vmStubsPH1Z1_pt_V_d0,
        vmStubsPH1Z1_index_V_address0,
        vmStubsPH1Z1_index_V_ce0,
        vmStubsPH1Z1_index_V_we0,
        vmStubsPH1Z1_index_V_d0,
        vmStubsPH1Z1_real_address0,
        vmStubsPH1Z1_real_ce0,
        vmStubsPH1Z1_real_we0,
        vmStubsPH1Z1_real_d0,
        vmStubsPH2Z1_z_V_address0,
        vmStubsPH2Z1_z_V_ce0,
        vmStubsPH2Z1_z_V_we0,
        vmStubsPH2Z1_z_V_d0,
        vmStubsPH2Z1_phi_V_address0,
        vmStubsPH2Z1_phi_V_ce0,
        vmStubsPH2Z1_phi_V_we0,
        vmStubsPH2Z1_phi_V_d0,
        vmStubsPH2Z1_r_V_address0,
        vmStubsPH2Z1_r_V_ce0,
        vmStubsPH2Z1_r_V_we0,
        vmStubsPH2Z1_r_V_d0,
        vmStubsPH2Z1_pt_V_address0,
        vmStubsPH2Z1_pt_V_ce0,
        vmStubsPH2Z1_pt_V_we0,
        vmStubsPH2Z1_pt_V_d0,
        vmStubsPH2Z1_index_V_address0,
        vmStubsPH2Z1_index_V_ce0,
        vmStubsPH2Z1_index_V_we0,
        vmStubsPH2Z1_index_V_d0,
        vmStubsPH2Z1_real_address0,
        vmStubsPH2Z1_real_ce0,
        vmStubsPH2Z1_real_we0,
        vmStubsPH2Z1_real_d0,
        vmStubsPH3Z1_z_V_address0,
        vmStubsPH3Z1_z_V_ce0,
        vmStubsPH3Z1_z_V_we0,
        vmStubsPH3Z1_z_V_d0,
        vmStubsPH3Z1_phi_V_address0,
        vmStubsPH3Z1_phi_V_ce0,
        vmStubsPH3Z1_phi_V_we0,
        vmStubsPH3Z1_phi_V_d0,
        vmStubsPH3Z1_r_V_address0,
        vmStubsPH3Z1_r_V_ce0,
        vmStubsPH3Z1_r_V_we0,
        vmStubsPH3Z1_r_V_d0,
        vmStubsPH3Z1_pt_V_address0,
        vmStubsPH3Z1_pt_V_ce0,
        vmStubsPH3Z1_pt_V_we0,
        vmStubsPH3Z1_pt_V_d0,
        vmStubsPH3Z1_index_V_address0,
        vmStubsPH3Z1_index_V_ce0,
        vmStubsPH3Z1_index_V_we0,
        vmStubsPH3Z1_index_V_d0,
        vmStubsPH3Z1_real_address0,
        vmStubsPH3Z1_real_ce0,
        vmStubsPH3Z1_real_we0,
        vmStubsPH3Z1_real_d0,
        vmStubsPH4Z1_z_V_address0,
        vmStubsPH4Z1_z_V_ce0,
        vmStubsPH4Z1_z_V_we0,
        vmStubsPH4Z1_z_V_d0,
        vmStubsPH4Z1_phi_V_address0,
        vmStubsPH4Z1_phi_V_ce0,
        vmStubsPH4Z1_phi_V_we0,
        vmStubsPH4Z1_phi_V_d0,
        vmStubsPH4Z1_r_V_address0,
        vmStubsPH4Z1_r_V_ce0,
        vmStubsPH4Z1_r_V_we0,
        vmStubsPH4Z1_r_V_d0,
        vmStubsPH4Z1_pt_V_address0,
        vmStubsPH4Z1_pt_V_ce0,
        vmStubsPH4Z1_pt_V_we0,
        vmStubsPH4Z1_pt_V_d0,
        vmStubsPH4Z1_index_V_address0,
        vmStubsPH4Z1_index_V_ce0,
        vmStubsPH4Z1_index_V_we0,
        vmStubsPH4Z1_index_V_d0,
        vmStubsPH4Z1_real_address0,
        vmStubsPH4Z1_real_ce0,
        vmStubsPH4Z1_real_we0,
        vmStubsPH4Z1_real_d0,
        vmStubsPH1Z2_z_V_address0,
        vmStubsPH1Z2_z_V_ce0,
        vmStubsPH1Z2_z_V_we0,
        vmStubsPH1Z2_z_V_d0,
        vmStubsPH1Z2_phi_V_address0,
        vmStubsPH1Z2_phi_V_ce0,
        vmStubsPH1Z2_phi_V_we0,
        vmStubsPH1Z2_phi_V_d0,
        vmStubsPH1Z2_r_V_address0,
        vmStubsPH1Z2_r_V_ce0,
        vmStubsPH1Z2_r_V_we0,
        vmStubsPH1Z2_r_V_d0,
        vmStubsPH1Z2_pt_V_address0,
        vmStubsPH1Z2_pt_V_ce0,
        vmStubsPH1Z2_pt_V_we0,
        vmStubsPH1Z2_pt_V_d0,
        vmStubsPH1Z2_index_V_address0,
        vmStubsPH1Z2_index_V_ce0,
        vmStubsPH1Z2_index_V_we0,
        vmStubsPH1Z2_index_V_d0,
        vmStubsPH1Z2_real_address0,
        vmStubsPH1Z2_real_ce0,
        vmStubsPH1Z2_real_we0,
        vmStubsPH1Z2_real_d0,
        vmStubsPH2Z2_z_V_address0,
        vmStubsPH2Z2_z_V_ce0,
        vmStubsPH2Z2_z_V_we0,
        vmStubsPH2Z2_z_V_d0,
        vmStubsPH2Z2_phi_V_address0,
        vmStubsPH2Z2_phi_V_ce0,
        vmStubsPH2Z2_phi_V_we0,
        vmStubsPH2Z2_phi_V_d0,
        vmStubsPH2Z2_r_V_address0,
        vmStubsPH2Z2_r_V_ce0,
        vmStubsPH2Z2_r_V_we0,
        vmStubsPH2Z2_r_V_d0,
        vmStubsPH2Z2_pt_V_address0,
        vmStubsPH2Z2_pt_V_ce0,
        vmStubsPH2Z2_pt_V_we0,
        vmStubsPH2Z2_pt_V_d0,
        vmStubsPH2Z2_index_V_address0,
        vmStubsPH2Z2_index_V_ce0,
        vmStubsPH2Z2_index_V_we0,
        vmStubsPH2Z2_index_V_d0,
        vmStubsPH2Z2_real_address0,
        vmStubsPH2Z2_real_ce0,
        vmStubsPH2Z2_real_we0,
        vmStubsPH2Z2_real_d0,
        vmStubsPH3Z2_z_V_address0,
        vmStubsPH3Z2_z_V_ce0,
        vmStubsPH3Z2_z_V_we0,
        vmStubsPH3Z2_z_V_d0,
        vmStubsPH3Z2_phi_V_address0,
        vmStubsPH3Z2_phi_V_ce0,
        vmStubsPH3Z2_phi_V_we0,
        vmStubsPH3Z2_phi_V_d0,
        vmStubsPH3Z2_r_V_address0,
        vmStubsPH3Z2_r_V_ce0,
        vmStubsPH3Z2_r_V_we0,
        vmStubsPH3Z2_r_V_d0,
        vmStubsPH3Z2_pt_V_address0,
        vmStubsPH3Z2_pt_V_ce0,
        vmStubsPH3Z2_pt_V_we0,
        vmStubsPH3Z2_pt_V_d0,
        vmStubsPH3Z2_index_V_address0,
        vmStubsPH3Z2_index_V_ce0,
        vmStubsPH3Z2_index_V_we0,
        vmStubsPH3Z2_index_V_d0,
        vmStubsPH3Z2_real_address0,
        vmStubsPH3Z2_real_ce0,
        vmStubsPH3Z2_real_we0,
        vmStubsPH3Z2_real_d0,
        vmStubsPH4Z2_z_V_address0,
        vmStubsPH4Z2_z_V_ce0,
        vmStubsPH4Z2_z_V_we0,
        vmStubsPH4Z2_z_V_d0,
        vmStubsPH4Z2_phi_V_address0,
        vmStubsPH4Z2_phi_V_ce0,
        vmStubsPH4Z2_phi_V_we0,
        vmStubsPH4Z2_phi_V_d0,
        vmStubsPH4Z2_r_V_address0,
        vmStubsPH4Z2_r_V_ce0,
        vmStubsPH4Z2_r_V_we0,
        vmStubsPH4Z2_r_V_d0,
        vmStubsPH4Z2_pt_V_address0,
        vmStubsPH4Z2_pt_V_ce0,
        vmStubsPH4Z2_pt_V_we0,
        vmStubsPH4Z2_pt_V_d0,
        vmStubsPH4Z2_index_V_address0,
        vmStubsPH4Z2_index_V_ce0,
        vmStubsPH4Z2_index_V_we0,
        vmStubsPH4Z2_index_V_d0,
        vmStubsPH4Z2_real_address0,
        vmStubsPH4Z2_real_ce0,
        vmStubsPH4Z2_real_we0,
        vmStubsPH4Z2_real_d0,
        nStubs
);

parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv6_1 = 6'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] stubsInLayer_z_V_address0;
output   stubsInLayer_z_V_ce0;
input  [11:0] stubsInLayer_z_V_q0;
output  [5:0] stubsInLayer_phi_V_address0;
output   stubsInLayer_phi_V_ce0;
input  [13:0] stubsInLayer_phi_V_q0;
output  [5:0] stubsInLayer_r_V_address0;
output   stubsInLayer_r_V_ce0;
input  [6:0] stubsInLayer_r_V_q0;
output  [5:0] stubsInLayer_pt_V_address0;
output   stubsInLayer_pt_V_ce0;
input  [2:0] stubsInLayer_pt_V_q0;
output  [5:0] stubsInLayer_real_address0;
output   stubsInLayer_real_ce0;
output   stubsInLayer_real_we0;
output  [0:0] stubsInLayer_real_d0;
input  [0:0] stubsInLayer_real_q0;
output  [5:0] stubsInLayer_real_address1;
output   stubsInLayer_real_ce1;
output   stubsInLayer_real_we1;
output  [0:0] stubsInLayer_real_d1;
input  [0:0] stubsInLayer_real_q1;
output  [5:0] allStubs_z_V_address0;
output   allStubs_z_V_ce0;
output   allStubs_z_V_we0;
output  [11:0] allStubs_z_V_d0;
output  [5:0] allStubs_phi_V_address0;
output   allStubs_phi_V_ce0;
output   allStubs_phi_V_we0;
output  [13:0] allStubs_phi_V_d0;
output  [5:0] allStubs_r_V_address0;
output   allStubs_r_V_ce0;
output   allStubs_r_V_we0;
output  [6:0] allStubs_r_V_d0;
output  [5:0] allStubs_pt_V_address0;
output   allStubs_pt_V_ce0;
output   allStubs_pt_V_we0;
output  [2:0] allStubs_pt_V_d0;
output  [5:0] allStubs_real_address0;
output   allStubs_real_ce0;
output   allStubs_real_we0;
output  [0:0] allStubs_real_d0;
output  [5:0] vmStubsPH1Z1_z_V_address0;
output   vmStubsPH1Z1_z_V_ce0;
output   vmStubsPH1Z1_z_V_we0;
output  [3:0] vmStubsPH1Z1_z_V_d0;
output  [5:0] vmStubsPH1Z1_phi_V_address0;
output   vmStubsPH1Z1_phi_V_ce0;
output   vmStubsPH1Z1_phi_V_we0;
output  [2:0] vmStubsPH1Z1_phi_V_d0;
output  [5:0] vmStubsPH1Z1_r_V_address0;
output   vmStubsPH1Z1_r_V_ce0;
output   vmStubsPH1Z1_r_V_we0;
output  [1:0] vmStubsPH1Z1_r_V_d0;
output  [5:0] vmStubsPH1Z1_pt_V_address0;
output   vmStubsPH1Z1_pt_V_ce0;
output   vmStubsPH1Z1_pt_V_we0;
output  [2:0] vmStubsPH1Z1_pt_V_d0;
output  [5:0] vmStubsPH1Z1_index_V_address0;
output   vmStubsPH1Z1_index_V_ce0;
output   vmStubsPH1Z1_index_V_we0;
output  [5:0] vmStubsPH1Z1_index_V_d0;
output  [5:0] vmStubsPH1Z1_real_address0;
output   vmStubsPH1Z1_real_ce0;
output   vmStubsPH1Z1_real_we0;
output  [0:0] vmStubsPH1Z1_real_d0;
output  [5:0] vmStubsPH2Z1_z_V_address0;
output   vmStubsPH2Z1_z_V_ce0;
output   vmStubsPH2Z1_z_V_we0;
output  [3:0] vmStubsPH2Z1_z_V_d0;
output  [5:0] vmStubsPH2Z1_phi_V_address0;
output   vmStubsPH2Z1_phi_V_ce0;
output   vmStubsPH2Z1_phi_V_we0;
output  [2:0] vmStubsPH2Z1_phi_V_d0;
output  [5:0] vmStubsPH2Z1_r_V_address0;
output   vmStubsPH2Z1_r_V_ce0;
output   vmStubsPH2Z1_r_V_we0;
output  [1:0] vmStubsPH2Z1_r_V_d0;
output  [5:0] vmStubsPH2Z1_pt_V_address0;
output   vmStubsPH2Z1_pt_V_ce0;
output   vmStubsPH2Z1_pt_V_we0;
output  [2:0] vmStubsPH2Z1_pt_V_d0;
output  [5:0] vmStubsPH2Z1_index_V_address0;
output   vmStubsPH2Z1_index_V_ce0;
output   vmStubsPH2Z1_index_V_we0;
output  [5:0] vmStubsPH2Z1_index_V_d0;
output  [5:0] vmStubsPH2Z1_real_address0;
output   vmStubsPH2Z1_real_ce0;
output   vmStubsPH2Z1_real_we0;
output  [0:0] vmStubsPH2Z1_real_d0;
output  [5:0] vmStubsPH3Z1_z_V_address0;
output   vmStubsPH3Z1_z_V_ce0;
output   vmStubsPH3Z1_z_V_we0;
output  [3:0] vmStubsPH3Z1_z_V_d0;
output  [5:0] vmStubsPH3Z1_phi_V_address0;
output   vmStubsPH3Z1_phi_V_ce0;
output   vmStubsPH3Z1_phi_V_we0;
output  [2:0] vmStubsPH3Z1_phi_V_d0;
output  [5:0] vmStubsPH3Z1_r_V_address0;
output   vmStubsPH3Z1_r_V_ce0;
output   vmStubsPH3Z1_r_V_we0;
output  [1:0] vmStubsPH3Z1_r_V_d0;
output  [5:0] vmStubsPH3Z1_pt_V_address0;
output   vmStubsPH3Z1_pt_V_ce0;
output   vmStubsPH3Z1_pt_V_we0;
output  [2:0] vmStubsPH3Z1_pt_V_d0;
output  [5:0] vmStubsPH3Z1_index_V_address0;
output   vmStubsPH3Z1_index_V_ce0;
output   vmStubsPH3Z1_index_V_we0;
output  [5:0] vmStubsPH3Z1_index_V_d0;
output  [5:0] vmStubsPH3Z1_real_address0;
output   vmStubsPH3Z1_real_ce0;
output   vmStubsPH3Z1_real_we0;
output  [0:0] vmStubsPH3Z1_real_d0;
output  [5:0] vmStubsPH4Z1_z_V_address0;
output   vmStubsPH4Z1_z_V_ce0;
output   vmStubsPH4Z1_z_V_we0;
output  [3:0] vmStubsPH4Z1_z_V_d0;
output  [5:0] vmStubsPH4Z1_phi_V_address0;
output   vmStubsPH4Z1_phi_V_ce0;
output   vmStubsPH4Z1_phi_V_we0;
output  [2:0] vmStubsPH4Z1_phi_V_d0;
output  [5:0] vmStubsPH4Z1_r_V_address0;
output   vmStubsPH4Z1_r_V_ce0;
output   vmStubsPH4Z1_r_V_we0;
output  [1:0] vmStubsPH4Z1_r_V_d0;
output  [5:0] vmStubsPH4Z1_pt_V_address0;
output   vmStubsPH4Z1_pt_V_ce0;
output   vmStubsPH4Z1_pt_V_we0;
output  [2:0] vmStubsPH4Z1_pt_V_d0;
output  [5:0] vmStubsPH4Z1_index_V_address0;
output   vmStubsPH4Z1_index_V_ce0;
output   vmStubsPH4Z1_index_V_we0;
output  [5:0] vmStubsPH4Z1_index_V_d0;
output  [5:0] vmStubsPH4Z1_real_address0;
output   vmStubsPH4Z1_real_ce0;
output   vmStubsPH4Z1_real_we0;
output  [0:0] vmStubsPH4Z1_real_d0;
output  [5:0] vmStubsPH1Z2_z_V_address0;
output   vmStubsPH1Z2_z_V_ce0;
output   vmStubsPH1Z2_z_V_we0;
output  [3:0] vmStubsPH1Z2_z_V_d0;
output  [5:0] vmStubsPH1Z2_phi_V_address0;
output   vmStubsPH1Z2_phi_V_ce0;
output   vmStubsPH1Z2_phi_V_we0;
output  [2:0] vmStubsPH1Z2_phi_V_d0;
output  [5:0] vmStubsPH1Z2_r_V_address0;
output   vmStubsPH1Z2_r_V_ce0;
output   vmStubsPH1Z2_r_V_we0;
output  [1:0] vmStubsPH1Z2_r_V_d0;
output  [5:0] vmStubsPH1Z2_pt_V_address0;
output   vmStubsPH1Z2_pt_V_ce0;
output   vmStubsPH1Z2_pt_V_we0;
output  [2:0] vmStubsPH1Z2_pt_V_d0;
output  [5:0] vmStubsPH1Z2_index_V_address0;
output   vmStubsPH1Z2_index_V_ce0;
output   vmStubsPH1Z2_index_V_we0;
output  [5:0] vmStubsPH1Z2_index_V_d0;
output  [5:0] vmStubsPH1Z2_real_address0;
output   vmStubsPH1Z2_real_ce0;
output   vmStubsPH1Z2_real_we0;
output  [0:0] vmStubsPH1Z2_real_d0;
output  [5:0] vmStubsPH2Z2_z_V_address0;
output   vmStubsPH2Z2_z_V_ce0;
output   vmStubsPH2Z2_z_V_we0;
output  [3:0] vmStubsPH2Z2_z_V_d0;
output  [5:0] vmStubsPH2Z2_phi_V_address0;
output   vmStubsPH2Z2_phi_V_ce0;
output   vmStubsPH2Z2_phi_V_we0;
output  [2:0] vmStubsPH2Z2_phi_V_d0;
output  [5:0] vmStubsPH2Z2_r_V_address0;
output   vmStubsPH2Z2_r_V_ce0;
output   vmStubsPH2Z2_r_V_we0;
output  [1:0] vmStubsPH2Z2_r_V_d0;
output  [5:0] vmStubsPH2Z2_pt_V_address0;
output   vmStubsPH2Z2_pt_V_ce0;
output   vmStubsPH2Z2_pt_V_we0;
output  [2:0] vmStubsPH2Z2_pt_V_d0;
output  [5:0] vmStubsPH2Z2_index_V_address0;
output   vmStubsPH2Z2_index_V_ce0;
output   vmStubsPH2Z2_index_V_we0;
output  [5:0] vmStubsPH2Z2_index_V_d0;
output  [5:0] vmStubsPH2Z2_real_address0;
output   vmStubsPH2Z2_real_ce0;
output   vmStubsPH2Z2_real_we0;
output  [0:0] vmStubsPH2Z2_real_d0;
output  [5:0] vmStubsPH3Z2_z_V_address0;
output   vmStubsPH3Z2_z_V_ce0;
output   vmStubsPH3Z2_z_V_we0;
output  [3:0] vmStubsPH3Z2_z_V_d0;
output  [5:0] vmStubsPH3Z2_phi_V_address0;
output   vmStubsPH3Z2_phi_V_ce0;
output   vmStubsPH3Z2_phi_V_we0;
output  [2:0] vmStubsPH3Z2_phi_V_d0;
output  [5:0] vmStubsPH3Z2_r_V_address0;
output   vmStubsPH3Z2_r_V_ce0;
output   vmStubsPH3Z2_r_V_we0;
output  [1:0] vmStubsPH3Z2_r_V_d0;
output  [5:0] vmStubsPH3Z2_pt_V_address0;
output   vmStubsPH3Z2_pt_V_ce0;
output   vmStubsPH3Z2_pt_V_we0;
output  [2:0] vmStubsPH3Z2_pt_V_d0;
output  [5:0] vmStubsPH3Z2_index_V_address0;
output   vmStubsPH3Z2_index_V_ce0;
output   vmStubsPH3Z2_index_V_we0;
output  [5:0] vmStubsPH3Z2_index_V_d0;
output  [5:0] vmStubsPH3Z2_real_address0;
output   vmStubsPH3Z2_real_ce0;
output   vmStubsPH3Z2_real_we0;
output  [0:0] vmStubsPH3Z2_real_d0;
output  [5:0] vmStubsPH4Z2_z_V_address0;
output   vmStubsPH4Z2_z_V_ce0;
output   vmStubsPH4Z2_z_V_we0;
output  [3:0] vmStubsPH4Z2_z_V_d0;
output  [5:0] vmStubsPH4Z2_phi_V_address0;
output   vmStubsPH4Z2_phi_V_ce0;
output   vmStubsPH4Z2_phi_V_we0;
output  [2:0] vmStubsPH4Z2_phi_V_d0;
output  [5:0] vmStubsPH4Z2_r_V_address0;
output   vmStubsPH4Z2_r_V_ce0;
output   vmStubsPH4Z2_r_V_we0;
output  [1:0] vmStubsPH4Z2_r_V_d0;
output  [5:0] vmStubsPH4Z2_pt_V_address0;
output   vmStubsPH4Z2_pt_V_ce0;
output   vmStubsPH4Z2_pt_V_we0;
output  [2:0] vmStubsPH4Z2_pt_V_d0;
output  [5:0] vmStubsPH4Z2_index_V_address0;
output   vmStubsPH4Z2_index_V_ce0;
output   vmStubsPH4Z2_index_V_we0;
output  [5:0] vmStubsPH4Z2_index_V_d0;
output  [5:0] vmStubsPH4Z2_real_address0;
output   vmStubsPH4Z2_real_ce0;
output   vmStubsPH4Z2_real_we0;
output  [0:0] vmStubsPH4Z2_real_d0;
input  [31:0] nStubs;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stubsInLayer_z_V_ce0;
reg stubsInLayer_phi_V_ce0;
reg stubsInLayer_r_V_ce0;
reg stubsInLayer_pt_V_ce0;
reg allStubs_z_V_ce0;
reg allStubs_z_V_we0;
reg allStubs_phi_V_ce0;
reg allStubs_phi_V_we0;
reg allStubs_r_V_ce0;
reg allStubs_r_V_we0;
reg allStubs_pt_V_ce0;
reg allStubs_pt_V_we0;
reg allStubs_real_ce0;
reg allStubs_real_we0;
reg vmStubsPH1Z1_z_V_ce0;
reg vmStubsPH1Z1_z_V_we0;
reg vmStubsPH1Z1_phi_V_ce0;
reg vmStubsPH1Z1_phi_V_we0;
reg vmStubsPH1Z1_r_V_ce0;
reg vmStubsPH1Z1_r_V_we0;
reg vmStubsPH1Z1_pt_V_ce0;
reg vmStubsPH1Z1_pt_V_we0;
reg vmStubsPH1Z1_index_V_ce0;
reg vmStubsPH1Z1_index_V_we0;
reg vmStubsPH1Z1_real_ce0;
reg vmStubsPH1Z1_real_we0;
reg vmStubsPH2Z1_z_V_ce0;
reg vmStubsPH2Z1_z_V_we0;
reg vmStubsPH2Z1_phi_V_ce0;
reg vmStubsPH2Z1_phi_V_we0;
reg vmStubsPH2Z1_r_V_ce0;
reg vmStubsPH2Z1_r_V_we0;
reg vmStubsPH2Z1_pt_V_ce0;
reg vmStubsPH2Z1_pt_V_we0;
reg vmStubsPH2Z1_index_V_ce0;
reg vmStubsPH2Z1_index_V_we0;
reg vmStubsPH2Z1_real_ce0;
reg vmStubsPH2Z1_real_we0;
reg vmStubsPH3Z1_z_V_ce0;
reg vmStubsPH3Z1_z_V_we0;
reg vmStubsPH3Z1_phi_V_ce0;
reg vmStubsPH3Z1_phi_V_we0;
reg vmStubsPH3Z1_r_V_ce0;
reg vmStubsPH3Z1_r_V_we0;
reg vmStubsPH3Z1_pt_V_ce0;
reg vmStubsPH3Z1_pt_V_we0;
reg vmStubsPH3Z1_index_V_ce0;
reg vmStubsPH3Z1_index_V_we0;
reg vmStubsPH3Z1_real_ce0;
reg vmStubsPH3Z1_real_we0;
reg vmStubsPH4Z1_z_V_ce0;
reg vmStubsPH4Z1_z_V_we0;
reg vmStubsPH4Z1_phi_V_ce0;
reg vmStubsPH4Z1_phi_V_we0;
reg vmStubsPH4Z1_r_V_ce0;
reg vmStubsPH4Z1_r_V_we0;
reg vmStubsPH4Z1_pt_V_ce0;
reg vmStubsPH4Z1_pt_V_we0;
reg vmStubsPH4Z1_index_V_ce0;
reg vmStubsPH4Z1_index_V_we0;
reg vmStubsPH4Z1_real_ce0;
reg vmStubsPH4Z1_real_we0;
reg vmStubsPH1Z2_z_V_ce0;
reg vmStubsPH1Z2_z_V_we0;
reg vmStubsPH1Z2_phi_V_ce0;
reg vmStubsPH1Z2_phi_V_we0;
reg vmStubsPH1Z2_r_V_ce0;
reg vmStubsPH1Z2_r_V_we0;
reg vmStubsPH1Z2_pt_V_ce0;
reg vmStubsPH1Z2_pt_V_we0;
reg vmStubsPH1Z2_index_V_ce0;
reg vmStubsPH1Z2_index_V_we0;
reg vmStubsPH1Z2_real_ce0;
reg vmStubsPH1Z2_real_we0;
reg vmStubsPH2Z2_z_V_ce0;
reg vmStubsPH2Z2_z_V_we0;
reg vmStubsPH2Z2_phi_V_ce0;
reg vmStubsPH2Z2_phi_V_we0;
reg vmStubsPH2Z2_r_V_ce0;
reg vmStubsPH2Z2_r_V_we0;
reg vmStubsPH2Z2_pt_V_ce0;
reg vmStubsPH2Z2_pt_V_we0;
reg vmStubsPH2Z2_index_V_ce0;
reg vmStubsPH2Z2_index_V_we0;
reg vmStubsPH2Z2_real_ce0;
reg vmStubsPH2Z2_real_we0;
reg vmStubsPH3Z2_z_V_ce0;
reg vmStubsPH3Z2_z_V_we0;
reg vmStubsPH3Z2_phi_V_ce0;
reg vmStubsPH3Z2_phi_V_we0;
reg vmStubsPH3Z2_r_V_ce0;
reg vmStubsPH3Z2_r_V_we0;
reg vmStubsPH3Z2_pt_V_ce0;
reg vmStubsPH3Z2_pt_V_we0;
reg vmStubsPH3Z2_index_V_ce0;
reg vmStubsPH3Z2_index_V_we0;
reg vmStubsPH3Z2_real_ce0;
reg vmStubsPH3Z2_real_we0;
reg vmStubsPH4Z2_z_V_ce0;
reg vmStubsPH4Z2_z_V_we0;
reg vmStubsPH4Z2_phi_V_ce0;
reg vmStubsPH4Z2_phi_V_we0;
reg vmStubsPH4Z2_r_V_ce0;
reg vmStubsPH4Z2_r_V_we0;
reg vmStubsPH4Z2_pt_V_ce0;
reg vmStubsPH4Z2_pt_V_we0;
reg vmStubsPH4Z2_index_V_ce0;
reg vmStubsPH4Z2_index_V_we0;
reg vmStubsPH4Z2_real_ce0;
reg vmStubsPH4Z2_real_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
wire   [6:0] i_1_fu_990_p2;
reg   [6:0] i_1_reg_1322;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_449;
wire   [0:0] tmp_fu_996_p2;
reg   [0:0] tmp_reg_1327;
wire   [0:0] exitcond_fu_984_p2;
wire   [63:0] tmp_1_fu_1001_p1;
reg   [63:0] tmp_1_reg_1331;
reg   [11:0] p_Val2_s_reg_1360;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_477;
reg   [13:0] p_Val2_1_reg_1365;
reg   [6:0] p_Val2_2_reg_1370;
reg   [2:0] redPt_V_reg_1375;
reg   [3:0] p_Result_s_reg_1388;
reg   [2:0] p_Result_1_reg_1400;
reg   [1:0] p_Result_2_reg_1412;
reg   [1:0] p_Result_3_reg_1424;
reg   [0:0] routeZ_V_reg_1428;
wire   [5:0] nPH4Z1_V_fu_1070_p2;
reg   [5:0] nPH4Z1_V_reg_1432;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_499;
wire   [5:0] nPH3Z1_V_fu_1089_p2;
reg   [5:0] nPH3Z1_V_reg_1437;
wire   [5:0] nPH2Z1_V_fu_1108_p2;
reg   [5:0] nPH2Z1_V_reg_1442;
wire   [5:0] nPH1Z1_V_fu_1127_p2;
reg   [5:0] nPH1Z1_V_reg_1447;
wire   [5:0] nPH4Z2_V_fu_1146_p2;
reg   [5:0] nPH4Z2_V_reg_1452;
wire   [5:0] nPH3Z2_V_fu_1165_p2;
reg   [5:0] nPH3Z2_V_reg_1457;
wire   [5:0] nPH2Z2_V_fu_1184_p2;
reg   [5:0] nPH2Z2_V_reg_1462;
wire   [5:0] nPH1Z2_V_fu_1203_p2;
reg   [5:0] nPH1Z2_V_reg_1467;
wire   [5:0] index_V_fu_1241_p2;
reg   [5:0] index_V_reg_1472;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_548;
reg   [6:0] i_reg_913;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_558;
wire   [63:0] tmp_4_fu_1060_p1;
wire   [63:0] tmp_3_fu_1079_p1;
wire   [63:0] tmp_2_fu_1098_p1;
wire   [63:0] tmp_s_fu_1117_p1;
wire   [63:0] tmp_8_fu_1136_p1;
wire   [63:0] tmp_7_fu_1155_p1;
wire   [63:0] tmp_6_fu_1174_p1;
wire   [63:0] tmp_5_fu_1193_p1;
reg   [5:0] nPH4Z2_V_1_fu_178;
reg   [5:0] nPH3Z2_V_1_fu_182;
reg   [5:0] nPH2Z2_V_1_fu_186;
reg   [5:0] nPH1Z2_V_1_fu_190;
reg   [5:0] nPH4Z1_V_1_fu_194;
reg   [5:0] nPH3Z1_V_1_fu_198;
reg   [5:0] nPH2Z1_V_1_fu_202;
reg   [5:0] nPH1Z1_V_1_fu_206;
reg   [5:0] op2_V_read_assign_fu_210;
wire   [31:0] i_cast1_fu_980_p1;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        i_reg_913 <= i_1_reg_1322;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_913 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH1Z1_V_1_fu_206 <= nPH1Z1_V_reg_1447;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH1Z1_V_1_fu_206 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH1Z2_V_1_fu_190 <= nPH1Z2_V_reg_1467;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH1Z2_V_1_fu_190 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH2Z1_V_1_fu_202 <= nPH2Z1_V_reg_1442;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH2Z1_V_1_fu_202 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH2Z2_V_1_fu_186 <= nPH2Z2_V_reg_1462;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH2Z2_V_1_fu_186 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH3Z1_V_1_fu_198 <= nPH3Z1_V_reg_1437;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH3Z1_V_1_fu_198 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH3Z2_V_1_fu_182 <= nPH3Z2_V_reg_1457;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH3Z2_V_1_fu_182 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH4Z1_V_1_fu_194 <= nPH4Z1_V_reg_1432;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH4Z1_V_1_fu_194 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428) & (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nPH4Z2_V_1_fu_178 <= nPH4Z2_V_reg_1452;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH4Z2_V_1_fu_178 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(tmp_reg_1327 == 1'b0))) begin
        op2_V_read_assign_fu_210 <= index_V_reg_1472;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        op2_V_read_assign_fu_210 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_1322 <= i_1_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        index_V_reg_1472 <= index_V_fu_1241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        nPH1Z1_V_reg_1447 <= nPH1Z1_V_fu_1127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        nPH1Z2_V_reg_1467 <= nPH1Z2_V_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        nPH2Z1_V_reg_1442 <= nPH2Z1_V_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        nPH2Z2_V_reg_1462 <= nPH2Z2_V_fu_1184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        nPH3Z1_V_reg_1437 <= nPH3Z1_V_fu_1089_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        nPH3Z2_V_reg_1457 <= nPH3Z2_V_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        nPH4Z1_V_reg_1432 <= nPH4Z1_V_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        nPH4Z2_V_reg_1452 <= nPH4Z2_V_fu_1146_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_Result_1_reg_1400 <= {{stubsInLayer_phi_V_q0[ap_const_lv32_B : ap_const_lv32_9]}};
        p_Result_2_reg_1412 <= {{stubsInLayer_r_V_q0[ap_const_lv32_6 : ap_const_lv32_5]}};
        p_Result_3_reg_1424 <= {{stubsInLayer_phi_V_q0[ap_const_lv32_D : ap_const_lv32_C]}};
        p_Result_s_reg_1388 <= {{stubsInLayer_z_V_q0[ap_const_lv32_8 : ap_const_lv32_5]}};
        p_Val2_1_reg_1365 <= stubsInLayer_phi_V_q0;
        p_Val2_2_reg_1370 <= stubsInLayer_r_V_q0;
        p_Val2_s_reg_1360 <= stubsInLayer_z_V_q0;
        redPt_V_reg_1375 <= stubsInLayer_pt_V_q0;
        routeZ_V_reg_1428 <= stubsInLayer_z_V_q0[ap_const_lv32_9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_984_p2 == 1'b0) & ~(tmp_fu_996_p2 == 1'b0))) begin
        tmp_1_reg_1331[6 : 0] <= tmp_1_fu_1001_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_984_p2 == 1'b0))) begin
        tmp_reg_1327 <= tmp_fu_996_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_phi_V_ce0 = 1'b1;
    end else begin
        allStubs_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_phi_V_we0 = 1'b1;
    end else begin
        allStubs_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_pt_V_ce0 = 1'b1;
    end else begin
        allStubs_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_pt_V_we0 = 1'b1;
    end else begin
        allStubs_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_r_V_ce0 = 1'b1;
    end else begin
        allStubs_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_r_V_we0 = 1'b1;
    end else begin
        allStubs_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_real_ce0 = 1'b1;
    end else begin
        allStubs_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_real_we0 = 1'b1;
    end else begin
        allStubs_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_z_V_ce0 = 1'b1;
    end else begin
        allStubs_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        allStubs_z_V_we0 = 1'b1;
    end else begin
        allStubs_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_984_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_984_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_449) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_477) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_499) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_548) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_558) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        stubsInLayer_phi_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        stubsInLayer_pt_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        stubsInLayer_r_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        stubsInLayer_z_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_real_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_real_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_real_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_real_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH1Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH1Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_real_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_real_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_real_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_real_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH2Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH2Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_real_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_real_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_real_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_real_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH3Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH3Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_real_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_real_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == routeZ_V_reg_1428) & (p_Result_3_reg_1424 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_real_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_real_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        vmStubsPH4Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (p_Result_3_reg_1424 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1428))) begin
        vmStubsPH4Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond_fu_984_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((exitcond_fu_984_p2 == 1'b0) & (tmp_fu_996_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign allStubs_phi_V_address0 = tmp_1_reg_1331;

assign allStubs_phi_V_d0 = p_Val2_1_reg_1365;

assign allStubs_pt_V_address0 = tmp_1_reg_1331;

assign allStubs_pt_V_d0 = redPt_V_reg_1375;

assign allStubs_r_V_address0 = tmp_1_reg_1331;

assign allStubs_r_V_d0 = p_Val2_2_reg_1370;

assign allStubs_real_address0 = tmp_1_reg_1331;

assign allStubs_real_d0 = 1'b1;

assign allStubs_z_V_address0 = tmp_1_reg_1331;

assign allStubs_z_V_d0 = p_Val2_s_reg_1360;

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_449 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_477 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_499 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_548 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_558 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

assign exitcond_fu_984_p2 = ((i_reg_913 == ap_const_lv7_40) ? 1'b1 : 1'b0);

assign i_1_fu_990_p2 = (i_reg_913 + ap_const_lv7_1);

assign i_cast1_fu_980_p1 = i_reg_913;

assign index_V_fu_1241_p2 = (op2_V_read_assign_fu_210 + ap_const_lv6_1);

assign nPH1Z1_V_fu_1127_p2 = (nPH1Z1_V_1_fu_206 + ap_const_lv6_1);

assign nPH1Z2_V_fu_1203_p2 = (nPH1Z2_V_1_fu_190 + ap_const_lv6_1);

assign nPH2Z1_V_fu_1108_p2 = (nPH2Z1_V_1_fu_202 + ap_const_lv6_1);

assign nPH2Z2_V_fu_1184_p2 = (nPH2Z2_V_1_fu_186 + ap_const_lv6_1);

assign nPH3Z1_V_fu_1089_p2 = (nPH3Z1_V_1_fu_198 + ap_const_lv6_1);

assign nPH3Z2_V_fu_1165_p2 = (nPH3Z2_V_1_fu_182 + ap_const_lv6_1);

assign nPH4Z1_V_fu_1070_p2 = (nPH4Z1_V_1_fu_194 + ap_const_lv6_1);

assign nPH4Z2_V_fu_1146_p2 = (nPH4Z2_V_1_fu_178 + ap_const_lv6_1);

assign stubsInLayer_phi_V_address0 = tmp_1_fu_1001_p1;

assign stubsInLayer_pt_V_address0 = tmp_1_fu_1001_p1;

assign stubsInLayer_r_V_address0 = tmp_1_fu_1001_p1;

assign stubsInLayer_real_address0 = ap_const_lv6_0;

assign stubsInLayer_real_address1 = ap_const_lv6_0;

assign stubsInLayer_real_ce0 = 1'b0;

assign stubsInLayer_real_ce1 = 1'b0;

assign stubsInLayer_real_d0 = 1'b0;

assign stubsInLayer_real_d1 = 1'b0;

assign stubsInLayer_real_we0 = 1'b0;

assign stubsInLayer_real_we1 = 1'b0;

assign stubsInLayer_z_V_address0 = tmp_1_fu_1001_p1;

assign tmp_1_fu_1001_p1 = i_reg_913;

assign tmp_2_fu_1098_p1 = nPH2Z1_V_1_fu_202;

assign tmp_3_fu_1079_p1 = nPH3Z1_V_1_fu_198;

assign tmp_4_fu_1060_p1 = nPH4Z1_V_1_fu_194;

assign tmp_5_fu_1193_p1 = nPH1Z2_V_1_fu_190;

assign tmp_6_fu_1174_p1 = nPH2Z2_V_1_fu_186;

assign tmp_7_fu_1155_p1 = nPH3Z2_V_1_fu_182;

assign tmp_8_fu_1136_p1 = nPH4Z2_V_1_fu_178;

assign tmp_fu_996_p2 = (($signed(i_cast1_fu_980_p1) < $signed(nStubs)) ? 1'b1 : 1'b0);

assign tmp_s_fu_1117_p1 = nPH1Z1_V_1_fu_206;

assign vmStubsPH1Z1_index_V_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH1Z1_phi_V_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH1Z1_pt_V_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH1Z1_r_V_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH1Z1_real_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_real_d0 = 1'b1;

assign vmStubsPH1Z1_z_V_address0 = tmp_s_fu_1117_p1;

assign vmStubsPH1Z1_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH1Z2_index_V_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH1Z2_phi_V_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH1Z2_pt_V_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH1Z2_r_V_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH1Z2_real_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_real_d0 = 1'b1;

assign vmStubsPH1Z2_z_V_address0 = tmp_5_fu_1193_p1;

assign vmStubsPH1Z2_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH2Z1_index_V_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH2Z1_phi_V_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH2Z1_pt_V_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH2Z1_r_V_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH2Z1_real_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_real_d0 = 1'b1;

assign vmStubsPH2Z1_z_V_address0 = tmp_2_fu_1098_p1;

assign vmStubsPH2Z1_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH2Z2_index_V_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH2Z2_phi_V_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH2Z2_pt_V_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH2Z2_r_V_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH2Z2_real_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_real_d0 = 1'b1;

assign vmStubsPH2Z2_z_V_address0 = tmp_6_fu_1174_p1;

assign vmStubsPH2Z2_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH3Z1_index_V_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH3Z1_phi_V_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH3Z1_pt_V_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH3Z1_r_V_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH3Z1_real_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_real_d0 = 1'b1;

assign vmStubsPH3Z1_z_V_address0 = tmp_3_fu_1079_p1;

assign vmStubsPH3Z1_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH3Z2_index_V_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH3Z2_phi_V_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH3Z2_pt_V_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH3Z2_r_V_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH3Z2_real_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_real_d0 = 1'b1;

assign vmStubsPH3Z2_z_V_address0 = tmp_7_fu_1155_p1;

assign vmStubsPH3Z2_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH4Z1_index_V_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH4Z1_phi_V_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH4Z1_pt_V_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH4Z1_r_V_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH4Z1_real_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_real_d0 = 1'b1;

assign vmStubsPH4Z1_z_V_address0 = tmp_4_fu_1060_p1;

assign vmStubsPH4Z1_z_V_d0 = p_Result_s_reg_1388;

assign vmStubsPH4Z2_index_V_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_index_V_d0 = op2_V_read_assign_fu_210;

assign vmStubsPH4Z2_phi_V_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_phi_V_d0 = p_Result_1_reg_1400;

assign vmStubsPH4Z2_pt_V_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_pt_V_d0 = redPt_V_reg_1375;

assign vmStubsPH4Z2_r_V_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_r_V_d0 = p_Result_2_reg_1412;

assign vmStubsPH4Z2_real_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_real_d0 = 1'b1;

assign vmStubsPH4Z2_z_V_address0 = tmp_8_fu_1136_p1;

assign vmStubsPH4Z2_z_V_d0 = p_Result_s_reg_1388;

always @ (posedge ap_clk) begin
    tmp_1_reg_1331[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //VMRouter
