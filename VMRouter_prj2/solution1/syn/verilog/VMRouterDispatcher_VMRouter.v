// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module VMRouterDispatcher_VMRouter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stubsInLayer_z_V_address0,
        stubsInLayer_z_V_ce0,
        stubsInLayer_z_V_q0,
        stubsInLayer_phi_V_address0,
        stubsInLayer_phi_V_ce0,
        stubsInLayer_phi_V_q0,
        stubsInLayer_r_V_address0,
        stubsInLayer_r_V_ce0,
        stubsInLayer_r_V_q0,
        stubsInLayer_pt_V_address0,
        stubsInLayer_pt_V_ce0,
        stubsInLayer_pt_V_q0,
        allStubs_z_V_address0,
        allStubs_z_V_ce0,
        allStubs_z_V_we0,
        allStubs_z_V_d0,
        allStubs_phi_V_address0,
        allStubs_phi_V_ce0,
        allStubs_phi_V_we0,
        allStubs_phi_V_d0,
        allStubs_r_V_address0,
        allStubs_r_V_ce0,
        allStubs_r_V_we0,
        allStubs_r_V_d0,
        allStubs_pt_V_address0,
        allStubs_pt_V_ce0,
        allStubs_pt_V_we0,
        allStubs_pt_V_d0,
        vmStubsPH1Z1_z_V_address0,
        vmStubsPH1Z1_z_V_ce0,
        vmStubsPH1Z1_z_V_we0,
        vmStubsPH1Z1_z_V_d0,
        vmStubsPH1Z1_phi_V_address0,
        vmStubsPH1Z1_phi_V_ce0,
        vmStubsPH1Z1_phi_V_we0,
        vmStubsPH1Z1_phi_V_d0,
        vmStubsPH1Z1_r_V_address0,
        vmStubsPH1Z1_r_V_ce0,
        vmStubsPH1Z1_r_V_we0,
        vmStubsPH1Z1_r_V_d0,
        vmStubsPH1Z1_pt_V_address0,
        vmStubsPH1Z1_pt_V_ce0,
        vmStubsPH1Z1_pt_V_we0,
        vmStubsPH1Z1_pt_V_d0,
        vmStubsPH1Z1_index_V_address0,
        vmStubsPH1Z1_index_V_ce0,
        vmStubsPH1Z1_index_V_we0,
        vmStubsPH1Z1_index_V_d0,
        vmStubsPH2Z1_z_V_address0,
        vmStubsPH2Z1_z_V_ce0,
        vmStubsPH2Z1_z_V_we0,
        vmStubsPH2Z1_z_V_d0,
        vmStubsPH2Z1_phi_V_address0,
        vmStubsPH2Z1_phi_V_ce0,
        vmStubsPH2Z1_phi_V_we0,
        vmStubsPH2Z1_phi_V_d0,
        vmStubsPH2Z1_r_V_address0,
        vmStubsPH2Z1_r_V_ce0,
        vmStubsPH2Z1_r_V_we0,
        vmStubsPH2Z1_r_V_d0,
        vmStubsPH2Z1_pt_V_address0,
        vmStubsPH2Z1_pt_V_ce0,
        vmStubsPH2Z1_pt_V_we0,
        vmStubsPH2Z1_pt_V_d0,
        vmStubsPH2Z1_index_V_address0,
        vmStubsPH2Z1_index_V_ce0,
        vmStubsPH2Z1_index_V_we0,
        vmStubsPH2Z1_index_V_d0,
        vmStubsPH3Z1_z_V_address0,
        vmStubsPH3Z1_z_V_ce0,
        vmStubsPH3Z1_z_V_we0,
        vmStubsPH3Z1_z_V_d0,
        vmStubsPH3Z1_phi_V_address0,
        vmStubsPH3Z1_phi_V_ce0,
        vmStubsPH3Z1_phi_V_we0,
        vmStubsPH3Z1_phi_V_d0,
        vmStubsPH3Z1_r_V_address0,
        vmStubsPH3Z1_r_V_ce0,
        vmStubsPH3Z1_r_V_we0,
        vmStubsPH3Z1_r_V_d0,
        vmStubsPH3Z1_pt_V_address0,
        vmStubsPH3Z1_pt_V_ce0,
        vmStubsPH3Z1_pt_V_we0,
        vmStubsPH3Z1_pt_V_d0,
        vmStubsPH3Z1_index_V_address0,
        vmStubsPH3Z1_index_V_ce0,
        vmStubsPH3Z1_index_V_we0,
        vmStubsPH3Z1_index_V_d0,
        vmStubsPH4Z1_z_V_address0,
        vmStubsPH4Z1_z_V_ce0,
        vmStubsPH4Z1_z_V_we0,
        vmStubsPH4Z1_z_V_d0,
        vmStubsPH4Z1_phi_V_address0,
        vmStubsPH4Z1_phi_V_ce0,
        vmStubsPH4Z1_phi_V_we0,
        vmStubsPH4Z1_phi_V_d0,
        vmStubsPH4Z1_r_V_address0,
        vmStubsPH4Z1_r_V_ce0,
        vmStubsPH4Z1_r_V_we0,
        vmStubsPH4Z1_r_V_d0,
        vmStubsPH4Z1_pt_V_address0,
        vmStubsPH4Z1_pt_V_ce0,
        vmStubsPH4Z1_pt_V_we0,
        vmStubsPH4Z1_pt_V_d0,
        vmStubsPH4Z1_index_V_address0,
        vmStubsPH4Z1_index_V_ce0,
        vmStubsPH4Z1_index_V_we0,
        vmStubsPH4Z1_index_V_d0,
        vmStubsPH1Z2_z_V_address0,
        vmStubsPH1Z2_z_V_ce0,
        vmStubsPH1Z2_z_V_we0,
        vmStubsPH1Z2_z_V_d0,
        vmStubsPH1Z2_phi_V_address0,
        vmStubsPH1Z2_phi_V_ce0,
        vmStubsPH1Z2_phi_V_we0,
        vmStubsPH1Z2_phi_V_d0,
        vmStubsPH1Z2_r_V_address0,
        vmStubsPH1Z2_r_V_ce0,
        vmStubsPH1Z2_r_V_we0,
        vmStubsPH1Z2_r_V_d0,
        vmStubsPH1Z2_pt_V_address0,
        vmStubsPH1Z2_pt_V_ce0,
        vmStubsPH1Z2_pt_V_we0,
        vmStubsPH1Z2_pt_V_d0,
        vmStubsPH1Z2_index_V_address0,
        vmStubsPH1Z2_index_V_ce0,
        vmStubsPH1Z2_index_V_we0,
        vmStubsPH1Z2_index_V_d0,
        vmStubsPH2Z2_z_V_address0,
        vmStubsPH2Z2_z_V_ce0,
        vmStubsPH2Z2_z_V_we0,
        vmStubsPH2Z2_z_V_d0,
        vmStubsPH2Z2_phi_V_address0,
        vmStubsPH2Z2_phi_V_ce0,
        vmStubsPH2Z2_phi_V_we0,
        vmStubsPH2Z2_phi_V_d0,
        vmStubsPH2Z2_r_V_address0,
        vmStubsPH2Z2_r_V_ce0,
        vmStubsPH2Z2_r_V_we0,
        vmStubsPH2Z2_r_V_d0,
        vmStubsPH2Z2_pt_V_address0,
        vmStubsPH2Z2_pt_V_ce0,
        vmStubsPH2Z2_pt_V_we0,
        vmStubsPH2Z2_pt_V_d0,
        vmStubsPH2Z2_index_V_address0,
        vmStubsPH2Z2_index_V_ce0,
        vmStubsPH2Z2_index_V_we0,
        vmStubsPH2Z2_index_V_d0,
        vmStubsPH3Z2_z_V_address0,
        vmStubsPH3Z2_z_V_ce0,
        vmStubsPH3Z2_z_V_we0,
        vmStubsPH3Z2_z_V_d0,
        vmStubsPH3Z2_phi_V_address0,
        vmStubsPH3Z2_phi_V_ce0,
        vmStubsPH3Z2_phi_V_we0,
        vmStubsPH3Z2_phi_V_d0,
        vmStubsPH3Z2_r_V_address0,
        vmStubsPH3Z2_r_V_ce0,
        vmStubsPH3Z2_r_V_we0,
        vmStubsPH3Z2_r_V_d0,
        vmStubsPH3Z2_pt_V_address0,
        vmStubsPH3Z2_pt_V_ce0,
        vmStubsPH3Z2_pt_V_we0,
        vmStubsPH3Z2_pt_V_d0,
        vmStubsPH3Z2_index_V_address0,
        vmStubsPH3Z2_index_V_ce0,
        vmStubsPH3Z2_index_V_we0,
        vmStubsPH3Z2_index_V_d0,
        vmStubsPH4Z2_z_V_address0,
        vmStubsPH4Z2_z_V_ce0,
        vmStubsPH4Z2_z_V_we0,
        vmStubsPH4Z2_z_V_d0,
        vmStubsPH4Z2_phi_V_address0,
        vmStubsPH4Z2_phi_V_ce0,
        vmStubsPH4Z2_phi_V_we0,
        vmStubsPH4Z2_phi_V_d0,
        vmStubsPH4Z2_r_V_address0,
        vmStubsPH4Z2_r_V_ce0,
        vmStubsPH4Z2_r_V_we0,
        vmStubsPH4Z2_r_V_d0,
        vmStubsPH4Z2_pt_V_address0,
        vmStubsPH4Z2_pt_V_ce0,
        vmStubsPH4Z2_pt_V_we0,
        vmStubsPH4Z2_pt_V_d0,
        vmStubsPH4Z2_index_V_address0,
        vmStubsPH4Z2_index_V_ce0,
        vmStubsPH4Z2_index_V_we0,
        vmStubsPH4Z2_index_V_d0,
        nStubs,
        nPH1Z1_V,
        nPH2Z1_V,
        nPH3Z1_V,
        nPH4Z1_V,
        nPH1Z2_V,
        nPH2Z2_V,
        nPH3Z2_V,
        nPH4Z2_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st5_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv6_32 = 6'b110010;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] stubsInLayer_z_V_address0;
output   stubsInLayer_z_V_ce0;
input  [11:0] stubsInLayer_z_V_q0;
output  [5:0] stubsInLayer_phi_V_address0;
output   stubsInLayer_phi_V_ce0;
input  [13:0] stubsInLayer_phi_V_q0;
output  [5:0] stubsInLayer_r_V_address0;
output   stubsInLayer_r_V_ce0;
input  [6:0] stubsInLayer_r_V_q0;
output  [5:0] stubsInLayer_pt_V_address0;
output   stubsInLayer_pt_V_ce0;
input  [2:0] stubsInLayer_pt_V_q0;
output  [5:0] allStubs_z_V_address0;
output   allStubs_z_V_ce0;
output   allStubs_z_V_we0;
output  [11:0] allStubs_z_V_d0;
output  [5:0] allStubs_phi_V_address0;
output   allStubs_phi_V_ce0;
output   allStubs_phi_V_we0;
output  [13:0] allStubs_phi_V_d0;
output  [5:0] allStubs_r_V_address0;
output   allStubs_r_V_ce0;
output   allStubs_r_V_we0;
output  [6:0] allStubs_r_V_d0;
output  [5:0] allStubs_pt_V_address0;
output   allStubs_pt_V_ce0;
output   allStubs_pt_V_we0;
output  [2:0] allStubs_pt_V_d0;
output  [5:0] vmStubsPH1Z1_z_V_address0;
output   vmStubsPH1Z1_z_V_ce0;
output   vmStubsPH1Z1_z_V_we0;
output  [3:0] vmStubsPH1Z1_z_V_d0;
output  [5:0] vmStubsPH1Z1_phi_V_address0;
output   vmStubsPH1Z1_phi_V_ce0;
output   vmStubsPH1Z1_phi_V_we0;
output  [2:0] vmStubsPH1Z1_phi_V_d0;
output  [5:0] vmStubsPH1Z1_r_V_address0;
output   vmStubsPH1Z1_r_V_ce0;
output   vmStubsPH1Z1_r_V_we0;
output  [1:0] vmStubsPH1Z1_r_V_d0;
output  [5:0] vmStubsPH1Z1_pt_V_address0;
output   vmStubsPH1Z1_pt_V_ce0;
output   vmStubsPH1Z1_pt_V_we0;
output  [2:0] vmStubsPH1Z1_pt_V_d0;
output  [5:0] vmStubsPH1Z1_index_V_address0;
output   vmStubsPH1Z1_index_V_ce0;
output   vmStubsPH1Z1_index_V_we0;
output  [5:0] vmStubsPH1Z1_index_V_d0;
output  [5:0] vmStubsPH2Z1_z_V_address0;
output   vmStubsPH2Z1_z_V_ce0;
output   vmStubsPH2Z1_z_V_we0;
output  [3:0] vmStubsPH2Z1_z_V_d0;
output  [5:0] vmStubsPH2Z1_phi_V_address0;
output   vmStubsPH2Z1_phi_V_ce0;
output   vmStubsPH2Z1_phi_V_we0;
output  [2:0] vmStubsPH2Z1_phi_V_d0;
output  [5:0] vmStubsPH2Z1_r_V_address0;
output   vmStubsPH2Z1_r_V_ce0;
output   vmStubsPH2Z1_r_V_we0;
output  [1:0] vmStubsPH2Z1_r_V_d0;
output  [5:0] vmStubsPH2Z1_pt_V_address0;
output   vmStubsPH2Z1_pt_V_ce0;
output   vmStubsPH2Z1_pt_V_we0;
output  [2:0] vmStubsPH2Z1_pt_V_d0;
output  [5:0] vmStubsPH2Z1_index_V_address0;
output   vmStubsPH2Z1_index_V_ce0;
output   vmStubsPH2Z1_index_V_we0;
output  [5:0] vmStubsPH2Z1_index_V_d0;
output  [5:0] vmStubsPH3Z1_z_V_address0;
output   vmStubsPH3Z1_z_V_ce0;
output   vmStubsPH3Z1_z_V_we0;
output  [3:0] vmStubsPH3Z1_z_V_d0;
output  [5:0] vmStubsPH3Z1_phi_V_address0;
output   vmStubsPH3Z1_phi_V_ce0;
output   vmStubsPH3Z1_phi_V_we0;
output  [2:0] vmStubsPH3Z1_phi_V_d0;
output  [5:0] vmStubsPH3Z1_r_V_address0;
output   vmStubsPH3Z1_r_V_ce0;
output   vmStubsPH3Z1_r_V_we0;
output  [1:0] vmStubsPH3Z1_r_V_d0;
output  [5:0] vmStubsPH3Z1_pt_V_address0;
output   vmStubsPH3Z1_pt_V_ce0;
output   vmStubsPH3Z1_pt_V_we0;
output  [2:0] vmStubsPH3Z1_pt_V_d0;
output  [5:0] vmStubsPH3Z1_index_V_address0;
output   vmStubsPH3Z1_index_V_ce0;
output   vmStubsPH3Z1_index_V_we0;
output  [5:0] vmStubsPH3Z1_index_V_d0;
output  [5:0] vmStubsPH4Z1_z_V_address0;
output   vmStubsPH4Z1_z_V_ce0;
output   vmStubsPH4Z1_z_V_we0;
output  [3:0] vmStubsPH4Z1_z_V_d0;
output  [5:0] vmStubsPH4Z1_phi_V_address0;
output   vmStubsPH4Z1_phi_V_ce0;
output   vmStubsPH4Z1_phi_V_we0;
output  [2:0] vmStubsPH4Z1_phi_V_d0;
output  [5:0] vmStubsPH4Z1_r_V_address0;
output   vmStubsPH4Z1_r_V_ce0;
output   vmStubsPH4Z1_r_V_we0;
output  [1:0] vmStubsPH4Z1_r_V_d0;
output  [5:0] vmStubsPH4Z1_pt_V_address0;
output   vmStubsPH4Z1_pt_V_ce0;
output   vmStubsPH4Z1_pt_V_we0;
output  [2:0] vmStubsPH4Z1_pt_V_d0;
output  [5:0] vmStubsPH4Z1_index_V_address0;
output   vmStubsPH4Z1_index_V_ce0;
output   vmStubsPH4Z1_index_V_we0;
output  [5:0] vmStubsPH4Z1_index_V_d0;
output  [5:0] vmStubsPH1Z2_z_V_address0;
output   vmStubsPH1Z2_z_V_ce0;
output   vmStubsPH1Z2_z_V_we0;
output  [3:0] vmStubsPH1Z2_z_V_d0;
output  [5:0] vmStubsPH1Z2_phi_V_address0;
output   vmStubsPH1Z2_phi_V_ce0;
output   vmStubsPH1Z2_phi_V_we0;
output  [2:0] vmStubsPH1Z2_phi_V_d0;
output  [5:0] vmStubsPH1Z2_r_V_address0;
output   vmStubsPH1Z2_r_V_ce0;
output   vmStubsPH1Z2_r_V_we0;
output  [1:0] vmStubsPH1Z2_r_V_d0;
output  [5:0] vmStubsPH1Z2_pt_V_address0;
output   vmStubsPH1Z2_pt_V_ce0;
output   vmStubsPH1Z2_pt_V_we0;
output  [2:0] vmStubsPH1Z2_pt_V_d0;
output  [5:0] vmStubsPH1Z2_index_V_address0;
output   vmStubsPH1Z2_index_V_ce0;
output   vmStubsPH1Z2_index_V_we0;
output  [5:0] vmStubsPH1Z2_index_V_d0;
output  [5:0] vmStubsPH2Z2_z_V_address0;
output   vmStubsPH2Z2_z_V_ce0;
output   vmStubsPH2Z2_z_V_we0;
output  [3:0] vmStubsPH2Z2_z_V_d0;
output  [5:0] vmStubsPH2Z2_phi_V_address0;
output   vmStubsPH2Z2_phi_V_ce0;
output   vmStubsPH2Z2_phi_V_we0;
output  [2:0] vmStubsPH2Z2_phi_V_d0;
output  [5:0] vmStubsPH2Z2_r_V_address0;
output   vmStubsPH2Z2_r_V_ce0;
output   vmStubsPH2Z2_r_V_we0;
output  [1:0] vmStubsPH2Z2_r_V_d0;
output  [5:0] vmStubsPH2Z2_pt_V_address0;
output   vmStubsPH2Z2_pt_V_ce0;
output   vmStubsPH2Z2_pt_V_we0;
output  [2:0] vmStubsPH2Z2_pt_V_d0;
output  [5:0] vmStubsPH2Z2_index_V_address0;
output   vmStubsPH2Z2_index_V_ce0;
output   vmStubsPH2Z2_index_V_we0;
output  [5:0] vmStubsPH2Z2_index_V_d0;
output  [5:0] vmStubsPH3Z2_z_V_address0;
output   vmStubsPH3Z2_z_V_ce0;
output   vmStubsPH3Z2_z_V_we0;
output  [3:0] vmStubsPH3Z2_z_V_d0;
output  [5:0] vmStubsPH3Z2_phi_V_address0;
output   vmStubsPH3Z2_phi_V_ce0;
output   vmStubsPH3Z2_phi_V_we0;
output  [2:0] vmStubsPH3Z2_phi_V_d0;
output  [5:0] vmStubsPH3Z2_r_V_address0;
output   vmStubsPH3Z2_r_V_ce0;
output   vmStubsPH3Z2_r_V_we0;
output  [1:0] vmStubsPH3Z2_r_V_d0;
output  [5:0] vmStubsPH3Z2_pt_V_address0;
output   vmStubsPH3Z2_pt_V_ce0;
output   vmStubsPH3Z2_pt_V_we0;
output  [2:0] vmStubsPH3Z2_pt_V_d0;
output  [5:0] vmStubsPH3Z2_index_V_address0;
output   vmStubsPH3Z2_index_V_ce0;
output   vmStubsPH3Z2_index_V_we0;
output  [5:0] vmStubsPH3Z2_index_V_d0;
output  [5:0] vmStubsPH4Z2_z_V_address0;
output   vmStubsPH4Z2_z_V_ce0;
output   vmStubsPH4Z2_z_V_we0;
output  [3:0] vmStubsPH4Z2_z_V_d0;
output  [5:0] vmStubsPH4Z2_phi_V_address0;
output   vmStubsPH4Z2_phi_V_ce0;
output   vmStubsPH4Z2_phi_V_we0;
output  [2:0] vmStubsPH4Z2_phi_V_d0;
output  [5:0] vmStubsPH4Z2_r_V_address0;
output   vmStubsPH4Z2_r_V_ce0;
output   vmStubsPH4Z2_r_V_we0;
output  [1:0] vmStubsPH4Z2_r_V_d0;
output  [5:0] vmStubsPH4Z2_pt_V_address0;
output   vmStubsPH4Z2_pt_V_ce0;
output   vmStubsPH4Z2_pt_V_we0;
output  [2:0] vmStubsPH4Z2_pt_V_d0;
output  [5:0] vmStubsPH4Z2_index_V_address0;
output   vmStubsPH4Z2_index_V_ce0;
output   vmStubsPH4Z2_index_V_we0;
output  [5:0] vmStubsPH4Z2_index_V_d0;
input  [31:0] nStubs;
input  [5:0] nPH1Z1_V;
input  [5:0] nPH2Z1_V;
input  [5:0] nPH3Z1_V;
input  [5:0] nPH4Z1_V;
input  [5:0] nPH1Z2_V;
input  [5:0] nPH2Z2_V;
input  [5:0] nPH3Z2_V;
input  [5:0] nPH4Z2_V;
output  [5:0] ap_return_0;
output  [5:0] ap_return_1;
output  [5:0] ap_return_2;
output  [5:0] ap_return_3;
output  [5:0] ap_return_4;
output  [5:0] ap_return_5;
output  [5:0] ap_return_6;
output  [5:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stubsInLayer_z_V_ce0;
reg stubsInLayer_phi_V_ce0;
reg stubsInLayer_r_V_ce0;
reg stubsInLayer_pt_V_ce0;
reg allStubs_z_V_ce0;
reg allStubs_z_V_we0;
reg allStubs_phi_V_ce0;
reg allStubs_phi_V_we0;
reg allStubs_r_V_ce0;
reg allStubs_r_V_we0;
reg allStubs_pt_V_ce0;
reg allStubs_pt_V_we0;
reg vmStubsPH1Z1_z_V_ce0;
reg vmStubsPH1Z1_z_V_we0;
reg vmStubsPH1Z1_phi_V_ce0;
reg vmStubsPH1Z1_phi_V_we0;
reg vmStubsPH1Z1_r_V_ce0;
reg vmStubsPH1Z1_r_V_we0;
reg vmStubsPH1Z1_pt_V_ce0;
reg vmStubsPH1Z1_pt_V_we0;
reg vmStubsPH1Z1_index_V_ce0;
reg vmStubsPH1Z1_index_V_we0;
reg vmStubsPH2Z1_z_V_ce0;
reg vmStubsPH2Z1_z_V_we0;
reg vmStubsPH2Z1_phi_V_ce0;
reg vmStubsPH2Z1_phi_V_we0;
reg vmStubsPH2Z1_r_V_ce0;
reg vmStubsPH2Z1_r_V_we0;
reg vmStubsPH2Z1_pt_V_ce0;
reg vmStubsPH2Z1_pt_V_we0;
reg vmStubsPH2Z1_index_V_ce0;
reg vmStubsPH2Z1_index_V_we0;
reg vmStubsPH3Z1_z_V_ce0;
reg vmStubsPH3Z1_z_V_we0;
reg vmStubsPH3Z1_phi_V_ce0;
reg vmStubsPH3Z1_phi_V_we0;
reg vmStubsPH3Z1_r_V_ce0;
reg vmStubsPH3Z1_r_V_we0;
reg vmStubsPH3Z1_pt_V_ce0;
reg vmStubsPH3Z1_pt_V_we0;
reg vmStubsPH3Z1_index_V_ce0;
reg vmStubsPH3Z1_index_V_we0;
reg vmStubsPH4Z1_z_V_ce0;
reg vmStubsPH4Z1_z_V_we0;
reg vmStubsPH4Z1_phi_V_ce0;
reg vmStubsPH4Z1_phi_V_we0;
reg vmStubsPH4Z1_r_V_ce0;
reg vmStubsPH4Z1_r_V_we0;
reg vmStubsPH4Z1_pt_V_ce0;
reg vmStubsPH4Z1_pt_V_we0;
reg vmStubsPH4Z1_index_V_ce0;
reg vmStubsPH4Z1_index_V_we0;
reg vmStubsPH1Z2_z_V_ce0;
reg vmStubsPH1Z2_z_V_we0;
reg vmStubsPH1Z2_phi_V_ce0;
reg vmStubsPH1Z2_phi_V_we0;
reg vmStubsPH1Z2_r_V_ce0;
reg vmStubsPH1Z2_r_V_we0;
reg vmStubsPH1Z2_pt_V_ce0;
reg vmStubsPH1Z2_pt_V_we0;
reg vmStubsPH1Z2_index_V_ce0;
reg vmStubsPH1Z2_index_V_we0;
reg vmStubsPH2Z2_z_V_ce0;
reg vmStubsPH2Z2_z_V_we0;
reg vmStubsPH2Z2_phi_V_ce0;
reg vmStubsPH2Z2_phi_V_we0;
reg vmStubsPH2Z2_r_V_ce0;
reg vmStubsPH2Z2_r_V_we0;
reg vmStubsPH2Z2_pt_V_ce0;
reg vmStubsPH2Z2_pt_V_we0;
reg vmStubsPH2Z2_index_V_ce0;
reg vmStubsPH2Z2_index_V_we0;
reg vmStubsPH3Z2_z_V_ce0;
reg vmStubsPH3Z2_z_V_we0;
reg vmStubsPH3Z2_phi_V_ce0;
reg vmStubsPH3Z2_phi_V_we0;
reg vmStubsPH3Z2_r_V_ce0;
reg vmStubsPH3Z2_r_V_we0;
reg vmStubsPH3Z2_pt_V_ce0;
reg vmStubsPH3Z2_pt_V_we0;
reg vmStubsPH3Z2_index_V_ce0;
reg vmStubsPH3Z2_index_V_we0;
reg vmStubsPH4Z2_z_V_ce0;
reg vmStubsPH4Z2_z_V_we0;
reg vmStubsPH4Z2_phi_V_ce0;
reg vmStubsPH4Z2_phi_V_we0;
reg vmStubsPH4Z2_r_V_ce0;
reg vmStubsPH4Z2_r_V_we0;
reg vmStubsPH4Z2_pt_V_ce0;
reg vmStubsPH4Z2_pt_V_we0;
reg vmStubsPH4Z2_index_V_ce0;
reg vmStubsPH4Z2_index_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg   [5:0] op2_V_read_assign_reg_844;
reg   [5:0] ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_383;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
wire   [0:0] tmp_fu_928_p2;
reg   [0:0] tmp_reg_1274;
wire   [5:0] index_V_fu_934_p2;
reg   [5:0] index_V_reg_1278;
wire   [0:0] tmp_1_fu_944_p2;
reg   [0:0] tmp_1_reg_1283;
reg   [0:0] ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1;
wire   [63:0] tmp_2_fu_949_p1;
reg   [63:0] tmp_2_reg_1287;
reg   [63:0] ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1;
reg   [11:0] p_Val2_s_reg_1315;
reg   [13:0] p_Val2_1_reg_1320;
reg   [6:0] p_Val2_2_reg_1325;
reg   [2:0] redPt_V_reg_1330;
reg   [3:0] p_Result_s_reg_1343;
reg   [2:0] p_Result_1_reg_1355;
reg   [1:0] p_Result_2_reg_1367;
reg   [1:0] p_Result_3_reg_1379;
reg   [0:0] routeZ_V_reg_1383;
reg   [5:0] op2_V_read_assign_phi_fu_856_p4;
wire   [63:0] tmp_9_fu_1005_p1;
wire   [63:0] tmp_7_fu_1025_p1;
wire   [63:0] tmp_5_fu_1045_p1;
wire   [63:0] tmp_s_fu_1065_p1;
wire   [63:0] tmp_17_fu_1085_p1;
wire   [63:0] tmp_15_fu_1105_p1;
wire   [63:0] tmp_13_fu_1125_p1;
wire   [63:0] tmp_11_fu_1145_p1;
reg   [5:0] nPH4Z2_V_fu_182;
wire   [5:0] tmp_18_fu_1094_p2;
reg    ap_sig_cseq_ST_st5_fsm_2;
reg    ap_sig_552;
reg   [5:0] nPH3Z2_V_fu_186;
wire   [5:0] tmp_16_fu_1114_p2;
reg   [5:0] nPH2Z2_V_fu_190;
wire   [5:0] tmp_14_fu_1134_p2;
reg   [5:0] nPH1Z2_V_fu_194;
wire   [5:0] tmp_12_fu_1154_p2;
reg   [5:0] nPH4Z1_V_fu_198;
wire   [5:0] tmp_10_fu_1014_p2;
reg   [5:0] nPH3Z1_V_fu_202;
wire   [5:0] tmp_8_fu_1034_p2;
reg   [5:0] nPH2Z1_V_fu_206;
wire   [5:0] tmp_6_fu_1054_p2;
reg   [5:0] nPH1Z1_V_fu_210;
wire   [5:0] tmp_4_fu_1074_p2;
wire   [31:0] i_cast1_fu_940_p1;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ((tmp_fu_928_p2 == 1'b0) | (~(tmp_fu_928_p2 == 1'b0) & (tmp_1_fu_944_p2 == 1'b0))))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((tmp_fu_928_p2 == 1'b0) | (~(tmp_fu_928_p2 == 1'b0) & (tmp_1_fu_944_p2 == 1'b0))))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ((tmp_fu_928_p2 == 1'b0) | (~(tmp_fu_928_p2 == 1'b0) & (tmp_1_fu_944_p2 == 1'b0)))))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        nPH1Z1_V_fu_210 <= tmp_4_fu_1074_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH1Z1_V_fu_210 <= nPH1Z1_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        nPH1Z2_V_fu_194 <= tmp_12_fu_1154_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH1Z2_V_fu_194 <= nPH1Z2_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        nPH2Z1_V_fu_206 <= tmp_6_fu_1054_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH2Z1_V_fu_206 <= nPH2Z1_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        nPH2Z2_V_fu_190 <= tmp_14_fu_1134_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH2Z2_V_fu_190 <= nPH2Z2_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        nPH3Z1_V_fu_202 <= tmp_8_fu_1034_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH3Z1_V_fu_202 <= nPH3Z1_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        nPH3Z2_V_fu_186 <= tmp_16_fu_1114_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH3Z2_V_fu_186 <= nPH3Z2_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        nPH4Z1_V_fu_198 <= tmp_10_fu_1014_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH4Z1_V_fu_198 <= nPH4Z1_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        nPH4Z2_V_fu_182 <= tmp_18_fu_1094_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        nPH4Z2_V_fu_182 <= nPH4Z2_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(tmp_1_reg_1283 == 1'b0) & ~(tmp_reg_1274 == 1'b0))) begin
        op2_V_read_assign_reg_844 <= index_V_reg_1278;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        op2_V_read_assign_reg_844 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1 <= op2_V_read_assign_reg_844;
        ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1 <= tmp_1_reg_1283;
        ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1[5 : 0] <= tmp_2_reg_1287[5 : 0];
        tmp_reg_1274 <= tmp_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        index_V_reg_1278 <= index_V_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_1_reg_1283 == 1'b0))) begin
        p_Result_1_reg_1355 <= {{stubsInLayer_phi_V_q0[ap_const_lv32_B : ap_const_lv32_9]}};
        p_Result_2_reg_1367 <= {{stubsInLayer_r_V_q0[ap_const_lv32_6 : ap_const_lv32_5]}};
        p_Result_3_reg_1379 <= {{stubsInLayer_phi_V_q0[ap_const_lv32_D : ap_const_lv32_C]}};
        p_Result_s_reg_1343 <= {{stubsInLayer_z_V_q0[ap_const_lv32_8 : ap_const_lv32_5]}};
        p_Val2_1_reg_1320 <= stubsInLayer_phi_V_q0;
        p_Val2_2_reg_1325 <= stubsInLayer_r_V_q0;
        p_Val2_s_reg_1315 <= stubsInLayer_z_V_q0;
        redPt_V_reg_1330 <= stubsInLayer_pt_V_q0;
        routeZ_V_reg_1383 <= stubsInLayer_z_V_q0[ap_const_lv32_9];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_fu_928_p2 == 1'b0))) begin
        tmp_1_reg_1283 <= tmp_1_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_fu_928_p2 == 1'b0) & ~(tmp_1_fu_944_p2 == 1'b0))) begin
        tmp_2_reg_1287[5 : 0] <= tmp_2_fu_949_p1[5 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        allStubs_phi_V_ce0 = 1'b1;
    end else begin
        allStubs_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1))) begin
        allStubs_phi_V_we0 = 1'b1;
    end else begin
        allStubs_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        allStubs_pt_V_ce0 = 1'b1;
    end else begin
        allStubs_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1))) begin
        allStubs_pt_V_we0 = 1'b1;
    end else begin
        allStubs_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        allStubs_r_V_ce0 = 1'b1;
    end else begin
        allStubs_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1))) begin
        allStubs_r_V_we0 = 1'b1;
    end else begin
        allStubs_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        allStubs_z_V_ce0 = 1'b1;
    end else begin
        allStubs_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1))) begin
        allStubs_z_V_we0 = 1'b1;
    end else begin
        allStubs_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_383) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_552) begin
        ap_sig_cseq_ST_st5_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(tmp_1_reg_1283 == 1'b0) & ~(tmp_reg_1274 == 1'b0))) begin
        op2_V_read_assign_phi_fu_856_p4 = index_V_reg_1278;
    end else begin
        op2_V_read_assign_phi_fu_856_p4 = op2_V_read_assign_reg_844;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        stubsInLayer_phi_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        stubsInLayer_pt_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        stubsInLayer_r_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        stubsInLayer_z_V_ce0 = 1'b1;
    end else begin
        stubsInLayer_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_0))) begin
        vmStubsPH1Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH1Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH1Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH1Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH1Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH1Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH1Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_0) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH1Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH1Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_1))) begin
        vmStubsPH2Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH2Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH2Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH2Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH2Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH2Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH2Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_1) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH2Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH2Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_2))) begin
        vmStubsPH3Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH3Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH3Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH3Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH3Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH3Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH3Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_2) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH3Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH3Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z1_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z1_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z1_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z1_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z1_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (1'b0 == routeZ_V_reg_1383) & (p_Result_3_reg_1379 == ap_const_lv2_3))) begin
        vmStubsPH4Z1_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z2_index_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_index_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH4Z2_index_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_index_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z2_phi_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_phi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH4Z2_phi_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_phi_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z2_pt_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_pt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH4Z2_pt_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_pt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z2_r_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH4Z2_r_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_r_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        vmStubsPH4Z2_z_V_ce0 = 1'b1;
    end else begin
        vmStubsPH4Z2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_1283_pp0_iter1) & (p_Result_3_reg_1379 == ap_const_lv2_3) & ~(1'b0 == routeZ_V_reg_1383))) begin
        vmStubsPH4Z2_z_V_we0 = 1'b1;
    end else begin
        vmStubsPH4Z2_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ((tmp_fu_928_p2 == 1'b0) | (~(tmp_fu_928_p2 == 1'b0) & (tmp_1_fu_944_p2 == 1'b0))) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ((tmp_fu_928_p2 == 1'b0) | (~(tmp_fu_928_p2 == 1'b0) & (tmp_1_fu_944_p2 == 1'b0))) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end
        end
        ap_ST_st5_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign allStubs_phi_V_address0 = ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1;

assign allStubs_phi_V_d0 = p_Val2_1_reg_1320;

assign allStubs_pt_V_address0 = ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1;

assign allStubs_pt_V_d0 = redPt_V_reg_1330;

assign allStubs_r_V_address0 = ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1;

assign allStubs_r_V_d0 = p_Val2_2_reg_1325;

assign allStubs_z_V_address0 = ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1;

assign allStubs_z_V_d0 = p_Val2_s_reg_1315;

assign ap_return_0 = nPH1Z1_V_fu_210;

assign ap_return_1 = nPH2Z1_V_fu_206;

assign ap_return_2 = nPH3Z1_V_fu_202;

assign ap_return_3 = nPH4Z1_V_fu_198;

assign ap_return_4 = nPH1Z2_V_fu_194;

assign ap_return_5 = nPH2Z2_V_fu_190;

assign ap_return_6 = nPH3Z2_V_fu_186;

assign ap_return_7 = nPH4Z2_V_fu_182;

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_383 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_552 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign i_cast1_fu_940_p1 = op2_V_read_assign_phi_fu_856_p4;

assign index_V_fu_934_p2 = (op2_V_read_assign_phi_fu_856_p4 + ap_const_lv6_1);

assign stubsInLayer_phi_V_address0 = tmp_2_fu_949_p1;

assign stubsInLayer_pt_V_address0 = tmp_2_fu_949_p1;

assign stubsInLayer_r_V_address0 = tmp_2_fu_949_p1;

assign stubsInLayer_z_V_address0 = tmp_2_fu_949_p1;

assign tmp_10_fu_1014_p2 = (nPH4Z1_V_fu_198 + ap_const_lv6_1);

assign tmp_11_fu_1145_p1 = nPH1Z2_V_fu_194;

assign tmp_12_fu_1154_p2 = (nPH1Z2_V_fu_194 + ap_const_lv6_1);

assign tmp_13_fu_1125_p1 = nPH2Z2_V_fu_190;

assign tmp_14_fu_1134_p2 = (nPH2Z2_V_fu_190 + ap_const_lv6_1);

assign tmp_15_fu_1105_p1 = nPH3Z2_V_fu_186;

assign tmp_16_fu_1114_p2 = (nPH3Z2_V_fu_186 + ap_const_lv6_1);

assign tmp_17_fu_1085_p1 = nPH4Z2_V_fu_182;

assign tmp_18_fu_1094_p2 = (nPH4Z2_V_fu_182 + ap_const_lv6_1);

assign tmp_1_fu_944_p2 = (($signed(i_cast1_fu_940_p1) < $signed(nStubs)) ? 1'b1 : 1'b0);

assign tmp_2_fu_949_p1 = op2_V_read_assign_phi_fu_856_p4;

assign tmp_4_fu_1074_p2 = (nPH1Z1_V_fu_210 + ap_const_lv6_1);

assign tmp_5_fu_1045_p1 = nPH2Z1_V_fu_206;

assign tmp_6_fu_1054_p2 = (nPH2Z1_V_fu_206 + ap_const_lv6_1);

assign tmp_7_fu_1025_p1 = nPH3Z1_V_fu_202;

assign tmp_8_fu_1034_p2 = (nPH3Z1_V_fu_202 + ap_const_lv6_1);

assign tmp_9_fu_1005_p1 = nPH4Z1_V_fu_198;

assign tmp_fu_928_p2 = ((op2_V_read_assign_phi_fu_856_p4 < ap_const_lv6_32) ? 1'b1 : 1'b0);

assign tmp_s_fu_1065_p1 = nPH1Z1_V_fu_210;

assign vmStubsPH1Z1_index_V_address0 = tmp_s_fu_1065_p1;

assign vmStubsPH1Z1_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH1Z1_phi_V_address0 = tmp_s_fu_1065_p1;

assign vmStubsPH1Z1_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH1Z1_pt_V_address0 = tmp_s_fu_1065_p1;

assign vmStubsPH1Z1_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH1Z1_r_V_address0 = tmp_s_fu_1065_p1;

assign vmStubsPH1Z1_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH1Z1_z_V_address0 = tmp_s_fu_1065_p1;

assign vmStubsPH1Z1_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH1Z2_index_V_address0 = tmp_11_fu_1145_p1;

assign vmStubsPH1Z2_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH1Z2_phi_V_address0 = tmp_11_fu_1145_p1;

assign vmStubsPH1Z2_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH1Z2_pt_V_address0 = tmp_11_fu_1145_p1;

assign vmStubsPH1Z2_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH1Z2_r_V_address0 = tmp_11_fu_1145_p1;

assign vmStubsPH1Z2_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH1Z2_z_V_address0 = tmp_11_fu_1145_p1;

assign vmStubsPH1Z2_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH2Z1_index_V_address0 = tmp_5_fu_1045_p1;

assign vmStubsPH2Z1_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH2Z1_phi_V_address0 = tmp_5_fu_1045_p1;

assign vmStubsPH2Z1_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH2Z1_pt_V_address0 = tmp_5_fu_1045_p1;

assign vmStubsPH2Z1_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH2Z1_r_V_address0 = tmp_5_fu_1045_p1;

assign vmStubsPH2Z1_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH2Z1_z_V_address0 = tmp_5_fu_1045_p1;

assign vmStubsPH2Z1_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH2Z2_index_V_address0 = tmp_13_fu_1125_p1;

assign vmStubsPH2Z2_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH2Z2_phi_V_address0 = tmp_13_fu_1125_p1;

assign vmStubsPH2Z2_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH2Z2_pt_V_address0 = tmp_13_fu_1125_p1;

assign vmStubsPH2Z2_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH2Z2_r_V_address0 = tmp_13_fu_1125_p1;

assign vmStubsPH2Z2_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH2Z2_z_V_address0 = tmp_13_fu_1125_p1;

assign vmStubsPH2Z2_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH3Z1_index_V_address0 = tmp_7_fu_1025_p1;

assign vmStubsPH3Z1_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH3Z1_phi_V_address0 = tmp_7_fu_1025_p1;

assign vmStubsPH3Z1_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH3Z1_pt_V_address0 = tmp_7_fu_1025_p1;

assign vmStubsPH3Z1_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH3Z1_r_V_address0 = tmp_7_fu_1025_p1;

assign vmStubsPH3Z1_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH3Z1_z_V_address0 = tmp_7_fu_1025_p1;

assign vmStubsPH3Z1_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH3Z2_index_V_address0 = tmp_15_fu_1105_p1;

assign vmStubsPH3Z2_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH3Z2_phi_V_address0 = tmp_15_fu_1105_p1;

assign vmStubsPH3Z2_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH3Z2_pt_V_address0 = tmp_15_fu_1105_p1;

assign vmStubsPH3Z2_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH3Z2_r_V_address0 = tmp_15_fu_1105_p1;

assign vmStubsPH3Z2_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH3Z2_z_V_address0 = tmp_15_fu_1105_p1;

assign vmStubsPH3Z2_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH4Z1_index_V_address0 = tmp_9_fu_1005_p1;

assign vmStubsPH4Z1_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH4Z1_phi_V_address0 = tmp_9_fu_1005_p1;

assign vmStubsPH4Z1_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH4Z1_pt_V_address0 = tmp_9_fu_1005_p1;

assign vmStubsPH4Z1_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH4Z1_r_V_address0 = tmp_9_fu_1005_p1;

assign vmStubsPH4Z1_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH4Z1_z_V_address0 = tmp_9_fu_1005_p1;

assign vmStubsPH4Z1_z_V_d0 = p_Result_s_reg_1343;

assign vmStubsPH4Z2_index_V_address0 = tmp_17_fu_1085_p1;

assign vmStubsPH4Z2_index_V_d0 = ap_reg_ppstg_op2_V_read_assign_reg_844_pp0_iter1;

assign vmStubsPH4Z2_phi_V_address0 = tmp_17_fu_1085_p1;

assign vmStubsPH4Z2_phi_V_d0 = p_Result_1_reg_1355;

assign vmStubsPH4Z2_pt_V_address0 = tmp_17_fu_1085_p1;

assign vmStubsPH4Z2_pt_V_d0 = redPt_V_reg_1330;

assign vmStubsPH4Z2_r_V_address0 = tmp_17_fu_1085_p1;

assign vmStubsPH4Z2_r_V_d0 = p_Result_2_reg_1367;

assign vmStubsPH4Z2_z_V_address0 = tmp_17_fu_1085_p1;

assign vmStubsPH4Z2_z_V_d0 = p_Result_s_reg_1343;

always @ (posedge ap_clk) begin
    tmp_2_reg_1287[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_2_reg_1287_pp0_iter1[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //VMRouterDispatcher_VMRouter
